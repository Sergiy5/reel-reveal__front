{"version":3,"file":"static/js/539.a0973dd3.chunk.js","mappings":"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","sources":["components/hero/HeroStyled.js","components/hero/Hero.jsx","components/howItWork/HowItWork.styled.js","components/howItWork/HowItWorks.jsx","components/linkToQuiz/LinkToQuiz.styled.js","components/linkToQuiz/LinkToQuiz.jsx","components/pages/homePage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { getAspectRatio } from 'utils';\n\nexport const HeroWrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column-reverse;\n  gap: 20px;\n\n  @media screen and (min-width: 1025px) {\n    flex-direction: row;\n  }\n`;\n  \nexport const HeroTextCTAWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  width: auto;\n  height: auto;\n  gap: 24px;\n\n  @media (min-width: 769px) {\n    width: ${props => props.$viewWidth - 160}px;\n  }\n\n  @media (min-width: 1025px) {\n    width: ${props => (props.$viewWidth - 160) / 2}px;\n    height: ${props => ((props.$viewWidth - 160) / 2) * 1.0102}px;\n  }\n  \n  @media (min-width: 1281px) {\n    align-items: flex-start;\n    width: ${props => (props.$viewWidth - 260) / 2}px;\n    height: ${props => ((props.$viewWidth - 260) / 2) * 1.0102}px;\n  }\n\n  @media (min-width: 1440px) {\n    width: 590px;\n    height: 584px;\n  }\n`;\n\nexport const HeroText = styled.p`\n  font-family: mainLightFont;\n  font-size: 20px;\n  line-height: 30px;\n`;\n\nexport const HeroBgEllips = styled.svg`\n  position: absolute;\n  z-index: 1;\n  right: 50%;\n  transform: translate(50%, 0%);\n  width: 100vw;\n  height: ${props => props.$viewWidth / 0.9359}px;\n\n  @media (min-width: 1025px) {\n    right: 32%;\n    transform: translate(32%, 0%);\n    width: ${props => (props.$viewWidth - 180) / 2 / 0.70828}px;\n    height: ${props => (props.$viewWidth - 180) / 2 / 0.70828 / 0.9359}px;\n  }\n\n  @media (min-width: 1281px) {\n    right: 50%;\n    transform: translate(50%, 0%);\n    width: ${props => props.$viewWidth / getAspectRatio(1440, 833)}px;\n    height: ${props => props.$viewWidth / 1.72869 / 0.9359}px;\n  }\n\n  @media (min-width: 1440px) {\n    width: 833px;\n    height: 890px;\n  }\n`;\n\n\nexport const WrapperImg = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: ${props => props.$viewWidth - 80}px;\n  height: ${props => props.$viewWidth - 80}px;\n\n  @media screen and (min-width: 769px) {\n    width: ${props => props.$viewWidth - 160}px;\n    height: ${props => (props.$viewWidth - 160) / 1.005}px;\n  }\n\n  @media screen and (min-width: 1025px) {\n    width: ${props => (props.$viewWidth - 180) / 2}px;\n    height: ${props => ((props.$viewWidth - 180) / 2) / 1.0102}px;\n  }\n\n  @media screen and (min-width: 1281px) {\n    width: ${props => (props.$viewWidth - 260) / 2}px;\n    height: ${props => (((props.$viewWidth - 260) / 2) / 1.0102)}px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 590px;\n    height: 584px;\n  }\n`;\n\nexport const HeroImage = styled.img`\n  position: absolute;\n  z-index: 1;\n  transform: translate(0%, 0%);\n  width: 100%;\n  height: auto;\n`;\n","import { NavLink } from 'react-router-dom';\nimport {\n  HeroImage,\n  HeroText,\n  HeroTextCTAWrapper,\n  WrapperImg,\n  HeroWrapper,\n  HeroBgEllips,\n} from './HeroStyled';\nimport sprite from '../../assets/images/svgSprite/sprite.svg'\nimport heroImg from '../../assets/images/heroImage.webp';\nimport { SharedStyledLinkBtn } from 'styles/SharedStyledLinkBtn.styled';\nimport { useSize } from 'components/context/MyProvider';\n\n\nexport const Hero = () => {\n  const viewWidth = useSize();\n\n// const screenWidth = window.innerWidth;\n// const pixelRatio = window.devicePixelRatio || 1;\n// const isRetina = pixelRatio > 1;\n\n// let imageIndex = 0;\n// if (screenWidth <= 375) {\n//   imageIndex = 0;\n// } else if (screenWidth >= 768) {\n//   imageIndex = 1;\n// } else if (screenWidth >= 1440) {\n//   imageIndex = 2;\n// }\n\n// if (isRetina) {\n//   imageIndex = imageIndex + 3;\n// }\n\n// const imagePaths = [\n//   require('../../images/GOOSE-mobile.png'),\n//   require('../../images/GOOSE-tablet.png'),\n//   require('../../images/GOOSE-desktop.png'),\n//   require('../../images/GOOSE-mobile@2x.png'),\n//   require('../../images/GOOSE-tablet@2x.png'),\n//   require('../../images/GOOSE-desktop@2x.png'),\n// ];\n\n// const selectedImagePath = imagePaths[imageIndex];\n\n  \n  return (\n    <HeroWrapper $viewWidt={viewWidth}>\n      <HeroTextCTAWrapper $viewWidth={viewWidth}>\n        <h1>Discover Your Perfect Movie with ReelReveal!</h1>\n\n        <HeroText>\n          Tired of endlessly scrolling through streaming platforms, unsure of\n          what to watch? Look no further! Reel Reveal is your go-to service for\n          finding the perfect movie match.\n        </HeroText>\n\n        <SharedStyledLinkBtn as={NavLink} to=\"#\" $width=\"285px\">\n          start quiz\n        </SharedStyledLinkBtn>\n      </HeroTextCTAWrapper>\n\n      <WrapperImg $viewWidth={viewWidth}>\n        <HeroBgEllips $viewWidth={viewWidth}>\n          <use xlinkHref={`${sprite}#heroEllips`} />\n        </HeroBgEllips>\n        <HeroImage src={heroImg} alt=\"Hero movies\" />\n      </WrapperImg>\n    </HeroWrapper>\n  );\n};\n","import { colors } from 'assets/variables/variablesColors';\nimport styled from 'styled-components';\nimport { getAspectRatio } from 'utils';\n\nexport const HowItWorksWrapper = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  width: 100%;\n  gap: 28px;\n\n  @media (min-width: 1024px) {\n    gap: 38px;\n  }\n\n  @media (min-width: 1280px) {\n    gap: 48px;\n  }\n`; \n\nexport const HowItWorksBgEllips = styled.svg`\n  position: absolute;\n  top: -54%;\n  left: 0;\n  width: 100%;\n  height: ${props=>props.$viewWidth / getAspectRatio(props.$viewWidth, 850)}px;\n  \n  @media (max-width: 768px) {\n    top: 10%;\n    transform: rotate(90deg);\n    \n  }\n`;\n\nexport const TitleH3styled = styled.h3`\n  font-weight: 700;\n  font-size: 30px;\n  line-height: 107%;\n`;\n\nexport const HowItWorksAllCardsWrapper = styled.div`\n  display: flex;\n  align-items: flex-start;\n  justify-content: space-between;\n  flex-direction: column;\n  width: 100%;\n  height: auto;\n  gap: 10px;\n\n  @media (min-width: 769px) {\n    flex-direction: row;\n  }\n`;\n\nexport const SvgStyled = styled.svg`\n  width: 61px;\n  height: 61px;\n`;\n\nexport const HowItWorksOneCardWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  text-align: center;\n  gap: 24px;\n  padding-top: 32px;\n  width: 100%;\n  height: auto;\n  background-color: ${colors.bgColor};\n\n  @media (min-width: 769px) {\n    justify-content: flex-start;\n    text-align: start;\n\n    width: 300px;\n    height: auto;\n  }\n`;\nexport const TextCardStyled = styled.p`\n  font-family: mainLightFont;\n  font-size: 20px;\n  line-height: 30px;\n`;\n","import {\n  HowItWorksAllCardsWrapper,\n  HowItWorksOneCardWrapper,\n  TextCardStyled,\n  SvgStyled,\n  TitleH3styled,\n  HowItWorksBgEllips,\n  HowItWorksWrapper,\n} from './HowItWork.styled';\nimport sprite from '../../assets/images/svgSprite/sprite.svg';\nimport { useSize } from 'components/context/MyProvider';\n\nexport const HowItWorks = () => {\n  const viewWidth = useSize();\n\n\n  return (\n    <HowItWorksWrapper>\n      <HowItWorksBgEllips $viewWidth={viewWidth}>\n        <use xlinkHref={`${sprite}#howItWorksBgEllips`} />\n      </HowItWorksBgEllips>\n\n      <h2>How it works</h2>\n      <HowItWorksAllCardsWrapper>\n        <HowItWorksOneCardWrapper>\n          <SvgStyled>\n            <use xlinkHref={`${sprite}#takeQuizSvg`} />\n          </SvgStyled>\n          <TitleH3styled>Take the Quiz</TitleH3styled>\n          <TextCardStyled>\n            A short quiz contains 7 questions that delve into your cinematic\n            preferences and mood.\n          </TextCardStyled>\n        </HowItWorksOneCardWrapper>\n        <HowItWorksOneCardWrapper>\n          <SvgStyled>\n            <use xlinkHref={`${sprite}#getFilmPicksSvg`} />\n          </SvgStyled>\n          <h3>Get Film Picks</h3>\n          <TextCardStyled>\n            Based on your quiz responses, receive a personalized movie\n            recommendations just for you.\n          </TextCardStyled>\n        </HowItWorksOneCardWrapper>\n        <HowItWorksOneCardWrapper>\n          <SvgStyled>\n            <use xlinkHref={`${sprite}#exploreAndEnjoySvg`} />\n          </SvgStyled>\n          <h3>Explore and Enjoy</h3>\n          <TextCardStyled>\n            Explore the recommendations, pop your popcorn and enjoy, we have a\n            movie for everybody!\n          </TextCardStyled>\n        </HowItWorksOneCardWrapper>\n      </HowItWorksAllCardsWrapper>\n    </HowItWorksWrapper>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const LinkToQuizWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  gap: 28px;\n  \n  @media (min-width: 769px) {\n      flex-direction: row;\n      gap: 48px;\n  }\n`;","import { NavLink } from 'react-router-dom';\nimport { SharedStyledLinkBtn } from 'styles';\nimport { LinkToQuizWrapper } from './LinkToQuiz.styled';\n\nexport const LinkToQuiz = () => {\n  return (\n      <LinkToQuizWrapper>\n      <h2>Take Our Quiz!</h2>\n      <SharedStyledLinkBtn as={NavLink} to=\"#\" $width=\"249px\">\n        take a quiz\n      </SharedStyledLinkBtn>\n      \n      </LinkToQuizWrapper>\n  );\n};\n","\nimport { Hero } from 'components/hero/Hero';\nimport { HowItWorks } from 'components/howItWork/HowItWorks';\n// import { Quiz } from 'components/quiz/Quiz';\n// import { GetShowMovies } from 'components/GetShowMovies/GetShowMovies';\n// import { topRatedMOvies } from 'apiService/topRatedMovies';\n// import { getUpcomingMovies } from 'apiService/getUpcomingMovies';\n// import { ChoseGenre } from 'components/choseGenres/ChooseGenres';\n// import SimpleSlider from 'components/stuckOnMovieChoices/StuckOnMovieChoices';\nimport { LinkToQuiz } from 'components/linkToQuiz/LinkToQuiz';\n\nconst HomePage = () => {\n\n\n\n  return (\n    <>\n      <Hero />\n      <HowItWorks />\n      {/*  <Quiz />\n      <GetShowMovies\n        title={'Upcoming 20 movies in 2024'}\n        getMovies={getUpcomingMovies}\n      />\n      <GetShowMovies title={'TOP 20 rated movies'} getMovies={topRatedMOvies} />\n      <ChoseGenre />\n      <SimpleSlider /> */}\n      <LinkToQuiz />\n    </>\n  );\n};\nexport default HomePage;\n"],"names":["HeroWrapper","styled","_templateObject","_taggedTemplateLiteral","HeroTextCTAWrapper","_templateObject2","props","$viewWidth","HeroText","_templateObject3","HeroBgEllips","_templateObject4","getAspectRatio","WrapperImg","_templateObject5","HeroImage","_templateObject6","Hero","viewWidth","useSize","_jsxs","$viewWidt","children","_jsx","SharedStyledLinkBtn","as","NavLink","to","$width","xlinkHref","concat","sprite","src","heroImg","alt","HowItWorksWrapper","HowItWorksBgEllips","TitleH3styled","HowItWorksAllCardsWrapper","SvgStyled","HowItWorksOneCardWrapper","colors","TextCardStyled","_templateObject7","HowItWorks","LinkToQuizWrapper","LinkToQuiz","_Fragment"],"sourceRoot":""}