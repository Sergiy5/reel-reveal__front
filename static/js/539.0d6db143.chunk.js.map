{"version":3,"file":"static/js/539.0d6db143.chunk.js","mappings":"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","sources":["components/hero/HeroStyled.js","components/hero/Hero.jsx","components/howItWork/HowItWork.styled.js","components/howItWork/HowItWorks.jsx","components/linkToQuiz/LinkToQuiz.styled.js","components/linkToQuiz/LinkToQuiz.jsx","components/pages/homePage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { getAspectRatio } from 'utils';\n\nexport const HeroWrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column-reverse;\n  height: auto;\n  gap: 20px;\n\n  @media screen and (min-width: 1025px) {\n    flex-direction: row;\n  }\n`;\n\nexport const HeroTextCTAWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  width: 100%;\n  height: auto;\n  gap: 24px;\n\n  @media (min-width: 1440px) {\n    width: 590px;\n    height: 584px;\n  }\n`;\n\nexport const HeroText = styled.p`\n  font-family: mainLightFont;\n  font-size: 20px;\n  line-height: 30px;\n`;\n\nexport const WrapperImg = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: auto;\n\n  @media screen and (min-width: 1440px) {\n    width: 590px;\n    height: 584px;\n  }\n`;\n\nexport const HeroImage = styled.img`\n  z-index: 1;\n  transform: translate(0%, 0%);\n  width: 100%;\n  height: auto;\n`;\n\nconst aspectRatioHeightToWidth = getAspectRatio(833, 890);\nconst aspectRatioViewWidthToWidth = getAspectRatio(1440, 833);\n\nexport const HeroBgEllips = styled.svg`\n  position: absolute;\n  z-index: 1;\n  right: 50%;\n  transform: translate(50%, 0%);\n  width: 100vw;\n  height: ${() => `calc(100vw / ${aspectRatioHeightToWidth})`};\n\n  @media (min-width: 1025px) {\n    right: -9%;\n    transform: translate(9%, 0%);\n    width: ${() => `calc(100vw / ${aspectRatioViewWidthToWidth})`};\n\n    height: ${() => `calc(100vw / ${aspectRatioViewWidthToWidth} / \n    ${getAspectRatio(aspectRatioViewWidthToWidth, 890)})`};\n  }\n\n  @media (min-width: 1281px) {\n    right: 50%;\n    transform: translate(50%, 0%);\n    width: ${() => `calc(100vw / ${aspectRatioViewWidthToWidth})`};\n    height: ${() =>\n      `calc(100vw / ${aspectRatioViewWidthToWidth} / ${aspectRatioHeightToWidth})`};\n  }\n\n  @media (min-width: 1440px) {\n    width: 833px;\n    height: 890px;\n  }\n`;\n\n\n \nexport const getHeight = (viewWidth, getwidthFunc, width, height) => {\n\n  return getwidthFunc(viewWidth, width, height) / getAspectRatio(width, height);\n  \n}","import { NavLink } from 'react-router-dom';\nimport {\n  HeroImage,\n  HeroText,\n  HeroTextCTAWrapper,\n  WrapperImg,\n  HeroWrapper,\n  HeroBgEllips,\n} from './HeroStyled';\nimport sprite from '../../assets/images/svgSprite/sprite.svg'\nimport heroImg from '../../assets/images/heroImage.webp';\nimport { SharedStyledLinkBtn } from 'styles/SharedStyledLinkBtn.styled';\nimport useResize from 'utils/useResize';\n\n\nexport const Hero = () => {\nconst viewWidth = useResize();\n\n\n// const screenWidth = window.innerWidth;\n// const pixelRatio = window.devicePixelRatio || 1;\n// const isRetina = pixelRatio > 1;\n\n// let imageIndex = 0;\n// if (screenWidth <= 375) {\n//   imageIndex = 0;\n// } else if (screenWidth >= 768) {\n//   imageIndex = 1;\n// } else if (screenWidth >= 1440) {\n//   imageIndex = 2;\n// }\n\n// if (isRetina) {\n//   imageIndex = imageIndex + 3;\n// }\n\n// const imagePaths = [\n//   require('../../images/GOOSE-mobile.png'),\n//   require('../../images/GOOSE-tablet.png'),\n//   require('../../images/GOOSE-desktop.png'),\n//   require('../../images/GOOSE-mobile@2x.png'),\n//   require('../../images/GOOSE-tablet@2x.png'),\n//   require('../../images/GOOSE-desktop@2x.png'),\n// ];\n\n// const selectedImagePath = imagePaths[imageIndex];\n\n  \n  return (\n    <HeroWrapper $viewWidt={viewWidth}>\n      <HeroTextCTAWrapper $viewWidth={viewWidth}>\n        <h1>Discover Your Perfect Movie with ReelReveal!</h1>\n\n        <HeroText>\n          Tired of endlessly scrolling through streaming platforms, unsure of\n          what to watch? Look no further! Reel Reveal is your go-to service for\n          finding the perfect movie match.\n        </HeroText>\n\n        <SharedStyledLinkBtn as={NavLink} to=\"#\" $width=\"285px\">\n          start quiz\n        </SharedStyledLinkBtn>\n      </HeroTextCTAWrapper>\n\n      <WrapperImg $viewWidth={viewWidth}>\n        <HeroBgEllips $viewWidth={viewWidth}>\n          <use xlinkHref={`${sprite}#heroEllips`} />\n        </HeroBgEllips>\n        <HeroImage src={heroImg} alt=\"Hero movies\" />\n      </WrapperImg>\n    </HeroWrapper>\n  );\n};\n","import { colors } from 'assets/variables/variablesColors';\nimport styled from 'styled-components';\nimport { getAspectRatio } from 'utils';\n\nexport const HowItWorksWrapper = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  width: 100%;\n  gap: 28px;\n\n  @media (min-width: 1024px) {\n    gap: 38px;\n  }\n\n  @media (min-width: 1280px) {\n    gap: 48px;\n  }\n`; \n\nexport const HowItWorksBgEllips = styled.svg`\n  position: absolute;\n  top: -54%;\n  left: 0;\n  width: 100%;\n  height: ${() => `calc(100vw / ${getAspectRatio(1440, 850)})`};\n\n  @media (max-width: 768px) {\n    top: 10%;\n    transform: rotate(90deg);\n  }\n`;\n\nexport const TitleH3styled = styled.h3`\n  font-weight: 700;\n  font-size: 30px;\n  line-height: 107%;\n`;\n\nexport const HowItWorksAllCardsWrapper = styled.div`\n  display: flex;\n  align-items: flex-start;\n  justify-content: space-between;\n  flex-direction: column;\n  width: 100%;\n  height: auto;\n  gap: 10px;\n\n  @media (min-width: 769px) {\n    flex-direction: row;\n  }\n`;\n\nexport const SvgStyled = styled.svg`\n  width: 61px;\n  height: 61px;\n`;\n\nexport const HowItWorksOneCardWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  text-align: center;\n  gap: 24px;\n  padding-top: 32px;\n  width: 100%;\n  height: auto;\n  background-color: ${colors.bgColor};\n\n  @media (min-width: 769px) {\n    justify-content: flex-start;\n    text-align: start;\n\n    width: 300px;\n    height: auto;\n  }\n`;\nexport const TextCardStyled = styled.p`\n  font-family: mainLightFont;\n  font-size: 20px;\n  line-height: 30px;\n`;\n","import {\n  HowItWorksAllCardsWrapper,\n  HowItWorksOneCardWrapper,\n  TextCardStyled,\n  SvgStyled,\n  TitleH3styled,\n  HowItWorksBgEllips,\n  HowItWorksWrapper,\n} from './HowItWork.styled';\nimport sprite from '../../assets/images/svgSprite/sprite.svg';\nimport useResize from 'utils/useResize';\n\nexport const HowItWorks = () => {\n  const viewWidth = useResize();\n\n\n\n  return (\n    <HowItWorksWrapper>\n      <HowItWorksBgEllips $viewWidth={viewWidth}>\n        <use xlinkHref={`${sprite}#howItWorksBgEllips`} />\n      </HowItWorksBgEllips>\n\n      <h2>How it works</h2>\n      <HowItWorksAllCardsWrapper>\n        <HowItWorksOneCardWrapper>\n          <SvgStyled>\n            <use xlinkHref={`${sprite}#takeQuizSvg`} />\n          </SvgStyled>\n          <TitleH3styled>Take the Quiz</TitleH3styled>\n          <TextCardStyled>\n            A short quiz contains 7 questions that delve into your cinematic\n            preferences and mood.\n          </TextCardStyled>\n        </HowItWorksOneCardWrapper>\n        <HowItWorksOneCardWrapper>\n          <SvgStyled>\n            <use xlinkHref={`${sprite}#getFilmPicksSvg`} />\n          </SvgStyled>\n          <h3>Get Film Picks</h3>\n          <TextCardStyled>\n            Based on your quiz responses, receive a personalized movie\n            recommendations just for you.\n          </TextCardStyled>\n        </HowItWorksOneCardWrapper>\n        <HowItWorksOneCardWrapper>\n          <SvgStyled>\n            <use xlinkHref={`${sprite}#exploreAndEnjoySvg`} />\n          </SvgStyled>\n          <h3>Explore and Enjoy</h3>\n          <TextCardStyled>\n            Explore the recommendations, pop your popcorn and enjoy, we have a\n            movie for everybody!\n          </TextCardStyled>\n        </HowItWorksOneCardWrapper>\n      </HowItWorksAllCardsWrapper>\n    </HowItWorksWrapper>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const LinkToQuizWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  gap: 28px;\n  \n  @media (min-width: 769px) {\n      flex-direction: row;\n      gap: 48px;\n  }\n`;","import { NavLink } from 'react-router-dom';\nimport { SharedStyledLinkBtn } from 'styles';\nimport { LinkToQuizWrapper } from './LinkToQuiz.styled';\n\nexport const LinkToQuiz = () => {\n  return (\n      <LinkToQuizWrapper>\n      <h2>Take Our Quiz!</h2>\n      <SharedStyledLinkBtn as={NavLink} to=\"#\" $width=\"249px\">\n        take a quiz\n      </SharedStyledLinkBtn>\n      \n      </LinkToQuizWrapper>\n  );\n};\n","\nimport { Hero } from 'components/hero/Hero';\nimport { HowItWorks } from 'components/howItWork/HowItWorks';\n// import { Quiz } from 'components/quiz/Quiz';\n// import { GetShowMovies } from 'components/GetShowMovies/GetShowMovies';\n// import { topRatedMOvies } from 'apiService/topRatedMovies';\n// import { getUpcomingMovies } from 'apiService/getUpcomingMovies';\n// import { ChoseGenre } from 'components/choseGenres/ChooseGenres';\n// import SimpleSlider from 'components/stuckOnMovieChoices/StuckOnMovieChoices';\nimport { LinkToQuiz } from 'components/linkToQuiz/LinkToQuiz';\n\nconst HomePage = () => {\n\n\n\n  return (\n    <>\n      <Hero />\n      <HowItWorks />\n      {/*  <Quiz />\n      <GetShowMovies\n        title={'Upcoming 20 movies in 2024'}\n        getMovies={getUpcomingMovies}\n      />\n      <GetShowMovies title={'TOP 20 rated movies'} getMovies={topRatedMOvies} />\n      <ChoseGenre />\n      <SimpleSlider /> */}\n      <LinkToQuiz />\n    </>\n  );\n};\nexport default HomePage;\n"],"names":["HeroWrapper","styled","_templateObject","_taggedTemplateLiteral","HeroTextCTAWrapper","_templateObject2","HeroText","_templateObject3","WrapperImg","_templateObject4","HeroImage","_templateObject5","aspectRatioHeightToWidth","getAspectRatio","aspectRatioViewWidthToWidth","HeroBgEllips","_templateObject6","concat","Hero","viewWidth","useResize","_jsxs","$viewWidt","children","$viewWidth","_jsx","SharedStyledLinkBtn","as","NavLink","to","$width","xlinkHref","sprite","src","heroImg","alt","HowItWorksWrapper","HowItWorksBgEllips","TitleH3styled","HowItWorksAllCardsWrapper","SvgStyled","HowItWorksOneCardWrapper","colors","TextCardStyled","_templateObject7","HowItWorks","LinkToQuizWrapper","LinkToQuiz","_Fragment"],"sourceRoot":""}